{
	// Place your esoteric vm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"load byte": {
		"scope": "rust",
		"prefix": "ldbyte",
		"body": "load_byte(self.memory.as_mut_slice(), last_idx, IK::$1 as u8)"
	},
	"load bytes": {
		"scope": "rust",
		"prefix": "ldbytes",
		"body": "load_bytes(self.memory.as_mut_slice(), last_idx, $1)"
	},
	"VM caller guarantee": {
		"prefix": "vmcallerguarantee",
		"body": "The VM machine code's author should gurantee that "
	}
}